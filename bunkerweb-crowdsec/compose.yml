services:
  bunkerweb:
    image: bunkerity/bunkerweb:1.5.7
    restart: unless-stopped
    ports:
      - 80:8080
      - 443:8443
    labels:
      - "bunkerweb.INSTANCE=yes"
    environment:
      - EXTERNAL_PLUGIN_URLS=https://github.com/bunkerity/bunkerweb-plugins/archive/refs/tags/v1.5.zip
      - API_WHITELIST_IP=10.10.10.4
      - SERVER_NAME=${URL}
      - USE_CROWDSEC=yes
      - CROWDSEC_MODE=stream
      - CROWDSEC_API=http://crowdsec:8080
      - CROWDSEC_API_KEY=${CROWDSEC_API_KEY}
      - USE_REVERSE_PROXY=yes
      - REVERSE_PROXY_URL=/
      - REVERSE_PROXY_HOST=http://myapp:80
      - DISABLE_DEFAULT_SERVER=yes
        #- REDIRECT_HTTP_TO_HTTPS=yes
    networks:
      - bw-universe
      - bw-services
    logging:
      driver: syslog
      options:
        syslog-address: "udp://10.10.10.254:514"

  bw-scheduler:
    image: bunkerity/bunkerweb-scheduler:1.5.7
    restart: unless-stopped
    depends_on:
      - bunkerweb
      - bw-docker
    environment:
      - DOCKER_HOST=tcp://bw-docker:2375
    networks:
      - bw-universe
      - bw-docker

  bw-docker:
    image: tecnativa/docker-socket-proxy:nightly
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./haproxy:/var/lib/haproxy  # Ensure this path exists and is writable
    environment:
      - CONTAINERS=1
      - LOG_LEVEL=warning
      - TIMEOUT_CLIENT=30000
      - TIMEOUT_CONNECT=5000
      - TIMEOUT_SERVER=30000
    networks:
      - bw-docker

  crowdsec:
    image: crowdsecurity/crowdsec:v1.6.0
    restart: unless-stopped
    volumes:
      - cs-data:/var/lib/crowdsec/data
      - ./acquis.yaml:/etc/crowdsec/acquis.yaml
      - bw-logs:/var/log:ro
    environment:
      - API_WHITELIST_IP=10.10.10.4
      - BOUNCER_KEY_bunkerweb=${CROWDSEC_API_KEY}
      - COLLECTIONS=crowdsecurity/nginx
    networks:
      - bw-universe

  syslog:
    image: balabit/syslog-ng:4.6.0
    restart: unless-stopped
    privileged: true
    volumes:
      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf
      - bw-logs:/var/log
    networks:
      bw-universe:
        ipv4_address: 10.10.10.254

  myapp:
    image: cr.cynapse.ai/devops/cloud-training
    container_name: myapp
    restart: unless-stopped
    environment:
      PORT: "80"
      GCP_PROJECT_ID: ${GCP_PROJECT_ID}
    networks:
      - bw-services

networks:
  bw-docker:
  bw-services:
  bw-universe:
    ipam:
      driver: default
      config:
        - subnet: 10.10.10.0/24

volumes:
  bw-data:
  bw-logs:
  cs-data: